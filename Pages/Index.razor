@page "/"
@using battleship.Services.Interfaces
@inject IGameService _gameService

<h1 class="h1">Battleship game simulation</h1>
<div class="container">
    <div class="mb-1">
        <button type="button" @onclick="() =>{ PlaceShips(); }" class="btn btn-info">Place ships</button>
        <button type="button" @onclick="() =>{ StartGame(); }" class="btn btn-success">Start game</button>
        <button disabled="@(!_areShipsPlaced)" type="button" @onclick='async () =>{await TakeShot("red"); }' class="btn btn-danger">Red shoots!</button>
        <button disabled="@(!_areShipsPlaced)" type="button" @onclick='async () =>{await TakeShot("blue"); }' class="btn btn-primary">Blue shoots!</button>
    </div>

    <div class="row mb-1">
        <div class="col-6 mb-1">
            <h3 class="red mb-1">Player Red</h3>
            <h4 class="mb-1">Points left: @(RedPlayer.PointsLeft)</h4>
            <table>
                <tr>
                    <th>0</th>
                    <th>1</th>
                    <th>2</th>
                    <th>3</th>
                    <th>4</th>
                    <th>5</th>
                    <th>6</th>
                    <th>7</th>
                    <th>8</th>
                    <th>9</th>
                </tr>
                @for (int i = 0; i < FieldWidth; i++)
                {
                    <tr>
                        @for (int j = 0; j < FieldHeight; j++)
                        {
                            @switch (RedPlayer.GameField.GetCell(i, j).CellState)
                            {
                                case Models.CellState.Empty:
                                    <td></td>
                                    break;
                                case Models.CellState.Ship:
                                    <td class="redShip"></td>
                                    break;
                                case Models.CellState.Hit:
                                    <td class="hit">
                                    </td>
                                    break;
                                case Models.CellState.Miss:
                                    <td class="miss">
                                    </td>
                                    break;
                                default:
                                    <td></td>
                                    break;
                            }
                        }
                        <td>@i</td>
                    </tr>
                }
            </table>
        </div>
        <div class="col-6 mb-1">
            <h3 class="blue mb-1">Player Blue</h3>
            <h4 class="mb-1">Points left: @(BluePlayer.PointsLeft)</h4>
            <table>
                <tr>
                    <th>0</th>
                    <th>1</th>
                    <th>2</th>
                    <th>3</th>
                    <th>4</th>
                    <th>5</th>
                    <th>6</th>
                    <th>7</th>
                    <th>8</th>
                    <th>9</th>
                </tr>
                @for (int i = 0; i < FieldWidth; i++)
                {
                    <tr>
                        @for (int j = 0; j < FieldHeight; j++)
                        {
                            @switch (BluePlayer.GameField.GetCell(i, j).CellState)
                            {
                                case Models.CellState.Empty:
                                    <td></td>
                                    break;
                                case Models.CellState.Ship:
                                    <td class="blueShip"></td>
                                    break;
                                case Models.CellState.Hit:
                                    <td class="hit">
                                    </td>
                                    break;
                                case Models.CellState.Miss:
                                    <td class="miss">
                                    </td>
                                    break;
                                default:
                                    <td></td>
                                    break;
                            }
                        }
                        <td>@i</td>
                    </tr>
                }
            </table>
        </div>
    </div>

    @if (RedPlayer.PointsLeft == 0)
    {
        <h1 class="blue">Blue player victory!</h1>
    }

    @if (BluePlayer.PointsLeft == 0)
    {
        <h1 class="red">Red player victory!</h1>
    }
</div>
